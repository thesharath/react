{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrBndry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","CardList","_ref","robots","cardComp","map","user","i","components_Card","key","SearchBox","type","placeholder","onChange","searchChange","Scroll","style","overflowX","border","height","children","ErrBndry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchField","target","value","_this2","fetch","then","resp","json","results","_this3","filtered","filter","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrBndry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"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","file":"static/js/main.d18ee813.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='' src={`https://robohash.org/${props.id}?20x20`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComp = robots.map((user, i ) => {\r\n        return <Card key={i} id = {robots[i].id} name = {robots[i].name} email = {robots[i].email}  />\r\n    })\r\n    return (\r\n        <div>\r\n            {cardComp}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = (props) => {\r\n    return(\r\n        <div>\r\n            <input\r\n                type='search'\r\n                placeholder='Search here'\r\n                onChange={props.searchChange}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowX: 'scroll', border: '5px solid black', height: '700px' }}>\r\n        {props.children}\r\n        </div>\r\n    ) \r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrBndry extends Component {\r\n constructor(props){\r\n     super(props)\r\n     this.state = {\r\n         hasError: false\r\n     }\r\n } \r\n componentDidCatch(error,info){\r\n     this.setState({ hasError: true })\r\n }\r\n render(){\r\n     if(this.state.hasError){\r\n        return <h1>Oooops... This is not good</h1>\r\n     } else {\r\n         return this.props.children\r\n     }\r\n }  \r\n}\r\n\r\nexport default ErrBndry;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrBndry from '../components/ErrBndry';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots:[],\r\n            searchField: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(resp=> resp.json())\r\n        .then(results => this.setState({robots:results}));\r\n    }\r\n    onSearchChange = (event)=> {\r\n        this.setState({searchField:event.target.value});\r\n    }\r\n    render(){\r\n        const filtered = this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n        if( this.state.robots.length === 0 ) {\r\n            return <h1>loading</h1>\r\n        }\r\n        else {\r\n            return (\r\n              <div className=\"tc\">\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                  <ErrBndry>\r\n                    <CardList robots={filtered} />\r\n                  </ErrBndry>\r\n                </Scroll>\r\n              </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n <React.StrictMode>\n   <App />\n </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}